variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

stages:
  - build
  - test
  - release
  - deploy

build:
  stage: build
  image: node:latest
  script:
    - npm install # Install dependencies
    - npm run build

# Job for running ESLint
eslint:
  stage: test
  image: node:latest
  script:
    - npm install eslint
    - npm install eslint-formatter-sonarqube
    - npx eslint --ext .js,.jsx --max-warnings=0 --format=eslint-formatter-sonarqube > eslint-report.json

sonarcloud-check:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - main      
          
release:
  stage: release
  image: node:lts
  before_script:
    - npm install -g semantic-release @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/git @semantic-release/gitlab conventional-changelog-conventionalcommits @semantic-release/changelog
  script:
    - semantic-release
  only:
    - dev
    - main     
trivy:
  stage: test
  image: docker:stable
  variables:
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: ".trivycache/"
  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
  allow_failure: true
  script: 
    - ./trivy fs --scanners vuln,secret,config .
  cache:
    paths:
      - .trivycache/

deploy:
  stage: deploy
  image: node:lts
  before_script:
    - npm install -g netlify-cli
  script:
    - npm run build  # Make sure your project is built before deploying
    - netlify deploy --prod  # Deploy the built project to Netlify
  only:
    - main 
